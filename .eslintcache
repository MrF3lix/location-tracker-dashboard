[{"/Users/felix/Projects/location-tracker-dashboard/src/index.js":"1","/Users/felix/Projects/location-tracker-dashboard/src/App.js":"2","/Users/felix/Projects/location-tracker-dashboard/src/Map.js":"3","/Users/felix/Projects/location-tracker-dashboard/src/FirebaseHelper.js":"4","/Users/felix/Projects/location-tracker-dashboard/src/PolylineOverlay.js":"5","/Users/felix/Projects/location-tracker-dashboard/src/Pin.js":"6"},{"size":240,"mtime":1593356552661,"results":"7","hashOfConfig":"8"},{"size":2772,"mtime":1612509618298,"results":"9","hashOfConfig":"8"},{"size":3010,"mtime":1601914190107,"results":"10","hashOfConfig":"8"},{"size":812,"mtime":1612508444241,"results":"11","hashOfConfig":"8"},{"size":788,"mtime":1601913922583,"results":"12","hashOfConfig":"8"},{"size":1500,"mtime":1600945959256,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"lzlh3w",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/felix/Projects/location-tracker-dashboard/src/index.js",[],["28","29"],"/Users/felix/Projects/location-tracker-dashboard/src/App.js",["30"],"/Users/felix/Projects/location-tracker-dashboard/src/Map.js",["31","32"],"import React, { useState, useEffect } from 'react'\nimport ReactMapGL, { Marker } from 'react-map-gl';\nimport { LocationPin } from './Pin';\nimport PolylineOverlay from './PolylineOverlay';\n\nconst simplify = require('simplify-geojson')\n\nconst MapComponent = ({ route, isActive }) => {\n    const [viewport, setViewport] = useState({\n        width: '400px',\n        height: '400px',\n        latitude: 52.36672,\n        longitude: 4.9254,\n        zoom: 11\n    });\n\n    useEffect(() => {\n        if (!route || !route.latest) return\n\n        const latestLocation = route.latest.location.coords\n        setViewport({ ...viewport, latitude: latestLocation.latitude, longitude: latestLocation.longitude })\n    }, [route])\n\n    useEffect(() => {\n        updateSize()\n        window.addEventListener('resize', updateSize)\n        return () => window.removeEventListener('resize', updateSize)\n    }, [])\n\n    const updateSize = () => {\n        setViewport({ ...viewport, height:window.innerWidth > 750 ? window.innerHeight : window.innerHeight - 200, width: window.innerWidth > 750 ? window.innerWidth - 350 : window.innerWidth })\n    }\n\n\n    const latestLocation = route?.latest?.location?.coords\n\n    return (\n        <div>\n            <ReactMapGL\n                {...viewport}\n                onViewportChange={nextViewport => setViewport(nextViewport)}\n                mapStyle=\"mapbox://styles/mapbox/streets-v11\"\n                mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n                transitionDuration={100}\n            >\n                <PolylineOverlay points={simplifyPoints(getPointsFromRoute(route))} />\n\n                {latestLocation &&\n                    <Marker key={latestLocation.timestamp} latitude={latestLocation.latitude} longitude={latestLocation.longitude}>\n                        <LocationPin direction={latestLocation.heading} isLive={isActive} />\n                    </Marker>\n                }\n\n            </ReactMapGL>\n        </div>\n    )\n}\n\nconst getPointsFromRoute = route => {\n    if (!route) return [];\n    return Object.keys(route).map(pointKey => {\n        const point = route[pointKey]\n        if(!point && !point.location) return []\n        return [\n            point.location.coords.longitude,\n            point.location.coords.latitude\n        ]\n    })\n}\n\nconst simplifyPoints = (points) => {\n    if(points.length === 0) {\n        return points\n    }\n    const simplified = simplify(\n        {\n            \"type\": \"FeatureCollection\",\n            \"features\": [\n                {\n                    \"type\": \"Feature\",\n                    \"properties\": {},\n                    \"geometry\": {\n                        \"type\": \"LineString\",\n                        \"coordinates\": points\n                    }\n                }\n            ]\n        },\n        0.0001\n    )\n\n    const newPoints = simplified.features[0].geometry.coordinates\n    console.log(`REDUCED FROM ${points.length} to ${newPoints.length}`)\n\n    return newPoints\n}\n\n\nexport default MapComponent","/Users/felix/Projects/location-tracker-dashboard/src/FirebaseHelper.js",[],"/Users/felix/Projects/location-tracker-dashboard/src/PolylineOverlay.js",[],"/Users/felix/Projects/location-tracker-dashboard/src/Pin.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":49,"column":52,"nodeType":"39","messageId":"40","endLine":49,"endColumn":59},{"ruleId":"41","severity":1,"message":"42","line":22,"column":8,"nodeType":"43","endLine":22,"endColumn":15,"suggestions":"44"},{"ruleId":"41","severity":1,"message":"45","line":28,"column":8,"nodeType":"43","endLine":28,"endColumn":10,"suggestions":"46"},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'viewport'. Either include it or remove the dependency array. You can also do a functional update 'setViewport(v => ...)' if you only need 'viewport' in the 'setViewport' call.","ArrayExpression",["49"],"React Hook useEffect has a missing dependency: 'updateSize'. Either include it or remove the dependency array.",["50"],"no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},{"desc":"53","fix":"54"},"Update the dependencies array to be: [route, viewport]",{"range":"55","text":"56"},"Update the dependencies array to be: [updateSize]",{"range":"57","text":"58"},[703,710],"[route, viewport]",[887,889],"[updateSize]"]